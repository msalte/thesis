package no.uis.msalte.thesis.secure_cloud.model;

public interface ISecureCloudShare {
	/**
	 * Generates a new secret key
	 * 
	 * @return The new secret key, represented by bytes
	 */
	public byte[] newSecretKey();

	/**
	 * Generates a new public key
	 * 
	 * @param sk
	 *            The respective secret key
	 * @return The new public key, represented by bytes
	 */
	public byte[] newPublicKey(byte[] sk);

	/**
	 * Generates a new re-encryption key
	 * 
	 * @param sk
	 *            The respective secret key
	 * @param pk
	 *            The respective public key
	 * @return The new re-encryption key, represented by bytes
	 */
	public byte[] newReEncryptionKey(byte[] sk, byte[] pk);

	/**
	 * Upload a file to the system's torrent directory
	 * 
	 * @param torrent
	 *            The torrent, represented by bytes
	 * @return The file's id, generated by the system
	 */
	public int upload(byte[] torrent);

	/**
	 * Share a file in the torrent directory with another user
	 * 
	 * @param id
	 *            The id of the torrent to be shared
	 * @param rek
	 *            The respective re-encryption key
	 * @param pk
	 *            The recipient's public key
	 */
	public void share(int id, byte[] rek, byte[] pk);

	/**
	 * Download a file from the torrent directory
	 * 
	 * @param id
	 *            The id of the torrent to download
	 * @param pk
	 *            The caller's public key. This must reflect an entry in the
	 *            system's share dictionary
	 * @return The torrent, represented by bytes
	 */
	public byte[] download(int id, byte[] pk);
}
